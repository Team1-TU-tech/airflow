x-airflow-common-env: &airflow-common-env
  AIRFLOW__CORE__EXECUTOR: CeleryExecutor
  AIRFLOW__CORE__FERNET_KEY: ''
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
  AIRFLOW__CELERY__BROKER_URL: 'redis://redis:6379/0'
  AIRFLOW__CELERY__RESULT_BACKEND: 'db+postgresql://airflow:airflow@postgres/airflow'
  AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "false"
  AIRFLOW__CORE__LOAD_EXAMPLES: "false"
  AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
  AIRFLOW__WEBSERVER__DEFAULT_USER: "true"

x-airflow-common-volumes: &airflow-common-volumes
  - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
  - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
  - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
  - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins 

services:
  # Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.10.3
    container_name: airflow-webserver
    ports:
      - "8080:8080"
    depends_on:
      - airflow-init
      - airflow-scheduler
      - airflow-worker
      - kafka
    environment:
      <<: *airflow-common-env
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
      - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
      - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
      - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    restart: always
    command: webserver

  # Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.10.3
    container_name: airflow-scheduler
    depends_on:
      - airflow-init
      - kafka
    environment:
      <<: *airflow-common-env
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
      - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
      - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
      - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    restart: always
    command: scheduler

  # Airflow Worker
  airflow-worker:
    build: .
    container_name: airflow-worker
    depends_on:
      - airflow-init
      - kafka
    environment:
      <<: *airflow-common-env
      GOOGLE_CHROME_BIN: "/usr/bin/google-chrome"
      CHROMEDRIVER_PATH: "/usr/local/bin/chromedriver"
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
      - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
      - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
      - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    restart: always
    command: celery worker
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: "1.0"

  # Airflow Triggerer
  airflow-triggerer:
    image: apache/airflow:2.10.3
    container_name: airflow-triggerer
    depends_on:
      - airflow-init
      - kafka
    environment:
      <<: *airflow-common-env
    restart: always
    command: triggerer

  # Airflow Database Initialization
  airflow-init:
    image: apache/airflow:2.10.3
    container_name: airflow-init
    environment:
      <<: *airflow-common-env
        #AIRFLOW__WEBSERVER__DEFAULT_USER: "true"
    entrypoint: >
      bash -c "
      airflow db upgrade &&
      airflow users create \
      --username $AIRFLOW_USERNAME \
      --firstname $AIRFLOW_FIRSTNAME \
      --lastname $AIRFLOW_LASTNAME \
      --role Admin \
      --email $AIRFLOW_EMAIL \
      --password $AIRFLOW_PASSWORD &&
      echo 'Airflow Initialization Complete'"
    restart: "no"

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  # Airflow Metadata Database (PostgreSQL)
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Redis (Celery Backend)
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

volumes:
  postgres-data:

